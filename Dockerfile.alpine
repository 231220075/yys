# 备选 Dockerfile（使用更轻量级的镜像）

# 第一阶段：构建阶段
FROM registry.cn-hangzhou.aliyuncs.com/library/maven:3.8.5-openjdk-17-slim AS builder

# 设置工作目录
WORKDIR /usr/src/mymaven

# 添加 Maven 镜像源配置
RUN mkdir -p /root/.m2 && \
    echo '<?xml version="1.0" encoding="UTF-8"?>' > /root/.m2/settings.xml && \
    echo '<settings>' >> /root/.m2/settings.xml && \
    echo '  <mirrors>' >> /root/.m2/settings.xml && \
    echo '    <mirror>' >> /root/.m2/settings.xml && \
    echo '      <id>aliyun</id>' >> /root/.m2/settings.xml && \
    echo '      <name>Aliyun Central</name>' >> /root/.m2/settings.xml && \
    echo '      <url>https://maven.aliyun.com/repository/central</url>' >> /root/.m2/settings.xml && \
    echo '      <mirrorOf>central</mirrorOf>' >> /root/.m2/settings.xml && \
    echo '    </mirror>' >> /root/.m2/settings.xml && \
    echo '  </mirrors>' >> /root/.m2/settings.xml && \
    echo '</settings>' >> /root/.m2/settings.xml

# 复制pom.xml和源代码
COPY pom.xml .
COPY src ./src

# 构建项目
RUN mvn -B -DskipTests clean package

# 第二阶段：运行阶段
FROM registry.cn-hangzhou.aliyuncs.com/library/openjdk:17-jre-alpine

# 安装必要的工具
RUN apk add --no-cache curl

# 设置工作目录
WORKDIR /usr/local/runapp

# 从构建阶段复制jar文件
COPY --from=builder /usr/src/mymaven/target/prometheus-test-demo-*.jar app.jar

# 暴露端口
EXPOSE 8080 8998

# 设置Java运行参数
ENV JAVA_OPTS="-Xms256m -Xmx512m -Djava.security.egd=file:/dev/./urandom"

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8998/actuator/health || exit 1

# 启动应用
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]
