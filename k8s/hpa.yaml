apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: yys-app-hpa
  namespace: default
  labels:
    app: yys-app
    version: v1
  annotations:
    description: "Enhanced HPA for YYS Spring Boot application with multiple metrics"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: yys-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
  # CPU 指标 - 主要扩容触发条件
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50  # 降低CPU阈值，更敏感的扩容
  # 内存指标 - 防止内存溢出
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70  # 内存使用率70%触发扩容
  # 基于QPS的自定义指标扩容（需要Prometheus Adapter）
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "10"  # 每个Pod平均QPS超过10时扩容
  behavior:
    scaleDown:
      # 缩容稳定期：5分钟，避免频繁缩容
      stabilizationWindowSeconds: 300
      policies:
      # 保守的缩容策略
      - type: Percent
        value: 20  # 每次最多缩容20%
        periodSeconds: 60
      - type: Pods
        value: 1   # 每次最多缩容1个Pod
        periodSeconds: 60
      selectPolicy: Min  # 选择最保守的策略
    scaleUp:
      # 扩容稳定期：30秒，快速响应负载增加
      stabilizationWindowSeconds: 30
      policies:
      # 激进的扩容策略
      - type: Percent
        value: 100  # 每次最多扩容100%（翻倍）
        periodSeconds: 15
      - type: Pods
        value: 3    # 每次最多扩容3个Pod
        periodSeconds: 15
      selectPolicy: Max  # 选择最激进的策略

---
# ServiceMonitor for HPA metrics
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: yys-app-hpa-monitor
  labels:
    app: yys-app
    component: hpa-monitoring
spec:
  selector:
    matchLabels:
      app: yys-app
  endpoints:
  - port: http
    path: /actuator/prometheus
    interval: 15s  # 更频繁的指标收集，支持HPA决策
    scrapeTimeout: 10s
