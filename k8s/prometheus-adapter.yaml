apiVersion: v1
kind: ConfigMap
metadata:
  name: adapter-config
  namespace: monitoring
data:
  config.yaml: |
    rules:
    # HTTP 请求速率指标
    - seriesQuery: 'http_server_requests_seconds_count{namespace!="",pod!=""}'
      metricsQuery: 'rate(<<.Series>>{<<.LabelMatchers>>}[2m])'
      name:
        matches: "^http_server_requests_seconds_count"
        as: "http_requests_per_second"
      resources:
        overrides:
          namespace: {resource: "namespace"}
          pod: {resource: "pod"}
    
    # JVM 内存使用率
    - seriesQuery: 'jvm_memory_used_bytes{area="heap",namespace!="",pod!=""}'
      metricsQuery: '(<<.Series>>{<<.LabelMatchers>>} / jvm_memory_max_bytes{<<.LabelMatchers>>}) * 100'
      name:
        matches: "^jvm_memory_used_bytes"
        as: "jvm_heap_memory_usage_percent"
      resources:
        overrides:
          namespace: {resource: "namespace"}
          pod: {resource: "pod"}
    
    # 限流触发率
    - seriesQuery: 'http_server_requests_rate_limited_total{namespace!="",pod!=""}'
      metricsQuery: 'rate(<<.Series>>{<<.LabelMatchers>>}[2m])'
      name:
        matches: "^http_server_requests_rate_limited_total"
        as: "rate_limited_requests_per_second"
      resources:
        overrides:
          namespace: {resource: "namespace"}
          pod: {resource: "pod"}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: custom-metrics-apiserver
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: custom-metrics-apiserver
  template:
    metadata:
      labels:
        app: custom-metrics-apiserver
    spec:
      containers:
      - name: custom-metrics-apiserver
        image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.10.0
        args:
        - --secure-port=6443
        - --tls-cert-file=/var/run/serving-cert/tls.crt
        - --tls-private-key-file=/var/run/serving-cert/tls.key
        - --logtostderr=true
        - --prometheus-url=http://prometheus:9090/
        - --metrics-relist-interval=1m
        - --v=4
        - --config=/etc/adapter/config.yaml
        ports:
        - containerPort: 6443
        volumeMounts:
        - mountPath: /var/run/serving-cert
          name: volume-serving-cert
          readOnly: true
        - mountPath: /etc/adapter/
          name: config
          readOnly: true
      volumes:
      - name: volume-serving-cert
        secret:
          secretName: cm-adapter-serving-certs
      - name: config
        configMap:
          name: adapter-config
